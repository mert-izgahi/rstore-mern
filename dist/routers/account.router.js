"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accountRouter = void 0;
const express_1 = require("express");
const trycatch_middleware_1 = require("../middlewares/trycatch.middleware");
const auth_middleware_1 = require("../middlewares/auth.middleware");
const account_controller_1 = require("../controllers/account.controller");
const router = (0, express_1.Router)();
exports.accountRouter = router;
router.post("/sign-up", (0, trycatch_middleware_1.tryCatch)(account_controller_1.signUp));
router.post("/sign-in", (0, trycatch_middleware_1.tryCatch)(account_controller_1.signIn));
router.post("/sign-out", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.signOut));
router.get("/get-my-account", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.getMyAccount));
router.put("/update-account-by-id/:id", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.updateAccountById));
router.put("/toggle-account-block-by-id/:id", auth_middleware_1.withAuth, (0, auth_middleware_1.authorizedFor)("admin"), (0, trycatch_middleware_1.tryCatch)(account_controller_1.toggleBlockById));
router.put("/toggle-account-delete-by-id/:id", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.toggleDeleteById));
router.post("/verify-account", (0, trycatch_middleware_1.tryCatch)(account_controller_1.verifyAccount));
router.post("/forgot-password", (0, trycatch_middleware_1.tryCatch)(account_controller_1.forgotPassword));
router.post("/update-password", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.updatePassword));
router.post("/reset-password/:passwordResetToken", (0, trycatch_middleware_1.tryCatch)(account_controller_1.resetPassword));
router.post("/send-verification-email", auth_middleware_1.withAuth, (0, trycatch_middleware_1.tryCatch)(account_controller_1.sendVerificationEmail));
router.get("/get-accounts", auth_middleware_1.withAuth, (0, auth_middleware_1.authorizedFor)("admin"), (0, trycatch_middleware_1.tryCatch)(account_controller_1.getAccounts));
router.get("/get-account/:id", auth_middleware_1.withAuth, (0, auth_middleware_1.authorizedFor)("admin"), (0, trycatch_middleware_1.tryCatch)(account_controller_1.getAccountById));
